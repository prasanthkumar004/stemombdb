<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="8" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-05-31T21:09:48 EDT" name="MovieDB Client Test Suite" finished-at="2022-05-31T21:10:05 EDT" duration-ms="17183">
    <groups>
    </groups>
    <test started-at="2022-05-31T21:09:48 EDT" name="Test 1 stem " finished-at="2022-05-31T21:09:55 EDT" duration-ms="7752">
      <class name="org.stem.moviedb.client.test.TestMovieDBClient">
        <test-method is-config="true" signature="startBeforeTest()[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@3f6f6701]" started-at="2022-05-31T21:09:48 EDT" name="startBeforeTest" finished-at="2022-05-31T21:09:48 EDT" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startBeforeTest -->
        <test-method is-config="true" signature="startTest(org.testng.ITestContext)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@3f6f6701]" started-at="2022-05-31T21:09:48 EDT" name="startTest" finished-at="2022-05-31T21:09:48 EDT" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@3bc6c10f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="beforeTestMethods(java.lang.reflect.Method)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@3f6f6701]" started-at="2022-05-31T21:09:48 EDT" name="beforeTestMethods" finished-at="2022-05-31T21:09:48 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.stem.moviedb.client.test.TestMovieDBClient.AssertListedMovieName(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethods -->
        <test-method signature="AssertListedMovieName(java.lang.String,java.lang.String)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@3f6f6701]" started-at="2022-05-31T21:09:48 EDT" name="AssertListedMovieName" finished-at="2022-05-31T21:09:51 EDT" duration-ms="3260" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[The STEM Journals,Activision: STEM - in the Videogame Industry]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[stem]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertListedMovieName -->
        <test-method is-config="true" signature="name(org.testng.ITestResult)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@3f6f6701]" started-at="2022-05-31T21:09:51 EDT" name="name" finished-at="2022-05-31T21:09:51 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AssertListedMovieName status=SUCCESS method=TestMovieDBClient.AssertListedMovieName(java.lang.String,java.lang.String)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@3f6f6701] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- name -->
        <test-method is-config="true" signature="beforeTestMethods(java.lang.reflect.Method)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@3f6f6701]" started-at="2022-05-31T21:09:51 EDT" name="beforeTestMethods" finished-at="2022-05-31T21:09:51 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.stem.moviedb.client.test.TestMovieDBClient.AssertMoviePlotAndRunTime(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethods -->
        <test-method signature="AssertMoviePlotAndRunTime(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@3f6f6701]" started-at="2022-05-31T21:09:51 EDT" name="AssertMoviePlotAndRunTime" finished-at="2022-05-31T21:09:51 EDT" duration-ms="248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Science, Technology, Engineering and Math]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22 minutes]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[The STEM Journals]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertMoviePlotAndRunTime -->
        <test-method is-config="true" signature="name(org.testng.ITestResult)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@3f6f6701]" started-at="2022-05-31T21:09:51 EDT" name="name" finished-at="2022-05-31T21:09:51 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AssertMoviePlotAndRunTime status=SUCCESS method=TestMovieDBClient.AssertMoviePlotAndRunTime(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@3f6f6701] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- name -->
        <test-method signature="AssertMovieReleasedDateAndDirectorName(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@3f6f6701]" started-at="2022-05-31T21:09:51 EDT" name="AssertMovieReleasedDateAndDirectorName" finished-at="2022-05-31T21:09:53 EDT" duration-ms="2091" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[23 Nov 2010]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mike Feurstein]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[stem]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Activision: STEM - in the Videogame Industry]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertMovieReleasedDateAndDirectorName -->
        <test-method is-config="true" signature="beforeTestMethods(java.lang.reflect.Method)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@3f6f6701]" started-at="2022-05-31T21:09:51 EDT" name="beforeTestMethods" finished-at="2022-05-31T21:09:51 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.stem.moviedb.client.test.TestMovieDBClient.AssertMovieReleasedDateAndDirectorName(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethods -->
        <test-method is-config="true" signature="beforeTestMethods(java.lang.reflect.Method)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@3f6f6701]" started-at="2022-05-31T21:09:53 EDT" name="beforeTestMethods" finished-at="2022-05-31T21:09:53 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.stem.moviedb.client.test.TestMovieDBClient.AssertResultsCount(int,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethods -->
        <test-method is-config="true" signature="name(org.testng.ITestResult)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@3f6f6701]" started-at="2022-05-31T21:09:53 EDT" name="name" finished-at="2022-05-31T21:09:53 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AssertMovieReleasedDateAndDirectorName status=SUCCESS method=TestMovieDBClient.AssertMovieReleasedDateAndDirectorName(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@3f6f6701] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- name -->
        <test-method signature="AssertResultsCount(int,java.lang.String)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@3f6f6701]" started-at="2022-05-31T21:09:53 EDT" name="AssertResultsCount" finished-at="2022-05-31T21:09:55 EDT" duration-ms="1879" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[stem]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertResultsCount -->
        <test-method is-config="true" signature="name(org.testng.ITestResult)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@3f6f6701]" started-at="2022-05-31T21:09:55 EDT" name="name" finished-at="2022-05-31T21:09:55 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AssertResultsCount status=SUCCESS method=TestMovieDBClient.AssertResultsCount(int,java.lang.String)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@3f6f6701] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- name -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@3f6f6701]" started-at="2022-05-31T21:09:55 EDT" name="endTest" finished-at="2022-05-31T21:09:55 EDT" duration-ms="133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- org.stem.moviedb.client.test.TestMovieDBClient -->
    </test> <!-- Test 1 stem  -->
    <test started-at="2022-05-31T21:09:55 EDT" name="Test 2 avatar " finished-at="2022-05-31T21:10:05 EDT" duration-ms="9410">
      <class name="org.stem.moviedb.client.test.TestMovieDBClient">
        <test-method is-config="true" signature="startBeforeTest()[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@2e8c1c9b]" started-at="2022-05-31T21:09:55 EDT" name="startBeforeTest" finished-at="2022-05-31T21:09:55 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startBeforeTest -->
        <test-method is-config="true" signature="startTest(org.testng.ITestContext)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@2e8c1c9b]" started-at="2022-05-31T21:09:55 EDT" name="startTest" finished-at="2022-05-31T21:09:55 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@3dcbbbc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="AssertListedMovieName(java.lang.String,java.lang.String)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@2e8c1c9b]" started-at="2022-05-31T21:09:55 EDT" name="AssertListedMovieName" finished-at="2022-05-31T21:09:58 EDT" duration-ms="2934" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Avatar: The Last Airbender - The Legend of Aang,Avatar: The Last Airbender - The Burning Earth,The Smuggler (Avatar: The Last Airbender)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[avatar]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertListedMovieName -->
        <test-method is-config="true" signature="beforeTestMethods(java.lang.reflect.Method)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@2e8c1c9b]" started-at="2022-05-31T21:09:55 EDT" name="beforeTestMethods" finished-at="2022-05-31T21:09:55 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.stem.moviedb.client.test.TestMovieDBClient.AssertListedMovieName(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethods -->
        <test-method is-config="true" signature="name(org.testng.ITestResult)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@2e8c1c9b]" started-at="2022-05-31T21:09:58 EDT" name="name" finished-at="2022-05-31T21:09:58 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AssertListedMovieName status=SUCCESS method=TestMovieDBClient.AssertListedMovieName(java.lang.String,java.lang.String)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@2e8c1c9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- name -->
        <test-method is-config="true" signature="beforeTestMethods(java.lang.reflect.Method)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@2e8c1c9b]" started-at="2022-05-31T21:09:58 EDT" name="beforeTestMethods" finished-at="2022-05-31T21:09:58 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.stem.moviedb.client.test.TestMovieDBClient.AssertMoviePlotAndRunTime(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethods -->
        <test-method signature="AssertMoviePlotAndRunTime(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@2e8c1c9b]" started-at="2022-05-31T21:09:58 EDT" name="AssertMoviePlotAndRunTime" finished-at="2022-05-31T21:09:59 EDT" duration-ms="395" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[In a war-torn world of elemental magic]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[23 minutes]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Avatar: The Last Airbender]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertMoviePlotAndRunTime -->
        <test-method is-config="true" signature="name(org.testng.ITestResult)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@2e8c1c9b]" started-at="2022-05-31T21:09:59 EDT" name="name" finished-at="2022-05-31T21:09:59 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AssertMoviePlotAndRunTime status=SUCCESS method=TestMovieDBClient.AssertMoviePlotAndRunTime(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@2e8c1c9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- name -->
        <test-method is-config="true" signature="beforeTestMethods(java.lang.reflect.Method)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@2e8c1c9b]" started-at="2022-05-31T21:09:59 EDT" name="beforeTestMethods" finished-at="2022-05-31T21:09:59 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.stem.moviedb.client.test.TestMovieDBClient.AssertMovieReleasedDateAndDirectorName(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethods -->
        <test-method signature="AssertMovieReleasedDateAndDirectorName(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@2e8c1c9b]" started-at="2022-05-31T21:09:59 EDT" name="AssertMovieReleasedDateAndDirectorName" finished-at="2022-05-31T21:10:02 EDT" duration-ms="3235" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[21 Feb 2005]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[N/A]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[avatar]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Avatar: The Last Airbender]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertMovieReleasedDateAndDirectorName -->
        <test-method is-config="true" signature="name(org.testng.ITestResult)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@2e8c1c9b]" started-at="2022-05-31T21:10:02 EDT" name="name" finished-at="2022-05-31T21:10:02 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AssertMovieReleasedDateAndDirectorName status=SUCCESS method=TestMovieDBClient.AssertMovieReleasedDateAndDirectorName(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@2e8c1c9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- name -->
        <test-method is-config="true" signature="beforeTestMethods(java.lang.reflect.Method)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@2e8c1c9b]" started-at="2022-05-31T21:10:02 EDT" name="beforeTestMethods" finished-at="2022-05-31T21:10:02 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.stem.moviedb.client.test.TestMovieDBClient.AssertResultsCount(int,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethods -->
        <test-method signature="AssertResultsCount(int,java.lang.String)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@2e8c1c9b]" started-at="2022-05-31T21:10:02 EDT" name="AssertResultsCount" finished-at="2022-05-31T21:10:05 EDT" duration-ms="2812" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[avatar]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertResultsCount -->
        <test-method is-config="true" signature="name(org.testng.ITestResult)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@2e8c1c9b]" started-at="2022-05-31T21:10:05 EDT" name="name" finished-at="2022-05-31T21:10:05 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AssertResultsCount status=SUCCESS method=TestMovieDBClient.AssertResultsCount(int,java.lang.String)[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@2e8c1c9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- name -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:org.stem.moviedb.client.test.TestMovieDBClient@2e8c1c9b]" started-at="2022-05-31T21:10:05 EDT" name="endTest" finished-at="2022-05-31T21:10:05 EDT" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- org.stem.moviedb.client.test.TestMovieDBClient -->
    </test> <!-- Test 2 avatar  -->
  </suite> <!-- MovieDB Client Test Suite -->
</testng-results>
